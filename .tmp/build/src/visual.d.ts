import powerbi from "powerbi-visuals-api";
import "./../style/visual.less";
import VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;
import VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;
import IVisual = powerbi.extensibility.visual.IVisual;
export declare class Visual implements IVisual {
    private target;
    private svg;
    private legend;
    private selectionIdBuilder;
    private selectionManager;
    private container;
    private tableContainer;
    private allProperties;
    private visualHost;
    private xAxis;
    private yAxis;
    private formattingSettingsService;
    private margin;
    private previousSelection;
    private previousLegendSelection;
    private tableFontSize;
    private tableFontFamily;
    private tableFontBold;
    private tableFontUnderline;
    private tableFontItalic;
    private tableFontColor;
    private tableDisplayUnits;
    private tableSelectedCategory;
    private tableQueryName;
    private barColor;
    private barSelectedCategory;
    private barTransparency;
    private barQueryName;
    private barColors;
    private lineColor;
    private lineSelectedCategory;
    private lineQueryName;
    private lineColors;
    private dataLabels;
    private tooltipService;
    private categorySelection;
    private selectedDataPoint;
    private totalBars;
    private totalLines;
    private totalTableRows;
    constructor(options: VisualConstructorOptions);
    update(options: VisualUpdateOptions): void;
    removeElements(): void;
    getDataPoints(role: any): any;
    getFormattingModel(): powerbi.visuals.FormattingModel;
    getFormattingCard(description: any, displayName: any, uid: any, groups: any): powerbi.visuals.FormattingCard;
    getFormattingGroup(displayName: any, uid: any, slices: any): powerbi.visuals.FormattingGroup;
    getFormattingSlice(type: any, uid: any, displayName: any, objectName: any, propertyName: any, selector: any, value: any): powerbi.visuals.FormattingSlice;
    private getAllSeries;
    private handleClick;
    private resetSelection;
    private styleElement;
    private filterProperty;
    private getPropertyValue;
    private formatValue;
    private getAutoNumber;
    getProperty<T>(objects: any, object: any, property: any, defaultValue: any): T;
}
